/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/


import * as THREE from 'three'
import React, { useEffect, useRef, useState } from 'react'
import { Html, useAnimations, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { Color } from 'three'
import { FaCaretRight } from 'react-icons/fa'
import model from '../../assets/globe.glb?url'

type GLTFResult = GLTF & {
  nodes: {
    NurbsPath: any
    Sphere: THREE.Mesh
    Cone: THREE.Mesh
    Cube_2_2_Body_0: THREE.Mesh
    Cube_2_2_Body_0_1: THREE.Mesh
    Cube_2_2_Body_0_2: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshPhysicalMaterial
    ['Material.003']: THREE.MeshPhysicalMaterial
    ['Material.004']: THREE.MeshPhysicalMaterial
    ['Material.005']: THREE.MeshPhysicalMaterial
    Body: THREE.MeshStandardMaterial
    material: THREE.MeshStandardMaterial
    Glass: THREE.MeshStandardMaterial
  }
}

type ActionName = 'NurbsPath' | 'Plane1'
type GLTFActions = Record<ActionName, THREE.AnimationAction>


function Markup({...props}) {
  const { nodes, materials } = useGLTF(model) as GLTFResult
  const [hovered, setHovered] = useState(false);

  function handleSetIndex(index:number) {
    if (props.activeIndex === index) {props.setActiveIndex(index+1)};
    (props.activeIndex !== index) && props.setActiveIndex(index);
  };

  return (
    <>
      <mesh
        onPointerOver={() => setHovered(true)}
        onPointerOut={() => setHovered(false)}
        geometry={nodes.Cone.geometry}
        material={hovered ? materials['Material.004'] : (props.activeIndex === props.index ? materials['Material.005'] : materials['Material.003'])}
        position={props.position} 
        rotation={props.rotation} 
        scale={0.1} 
        onClick={() => handleSetIndex(props.index)}
      /> 
      {(props.activeIndex === props.index) && 
        <Html distanceFactor={innerWidth/innerHeight*1.5} position={props.position} className="markup" >
          <div className="markup-content">
            { props.children } <div className='markup-icon' onClick={() => handleSetIndex(props.index)}><FaCaretRight /></div>
          </div>
        </Html>
      }
    </>
  )
}


export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF(model) as GLTFResult
  const { actions } = useAnimations(animations, group);
  const _scale = (innerWidth/innerHeight)*0.5;
  const [activeIndex, setActiveIndex] = useState(1);

  materials['Material.001'].envMapIntensity = 0.5;
  materials['Material.001'].sheen = 0.2;
  materials['Material.001'].sheenColor = new Color("#7ad4f5").convertSRGBToLinear();
  materials['Material.003'].color = new Color("red").convertSRGBToLinear();
  materials['Material.003'].emissiveIntensity = 0;
  materials['Material.004'].color = new Color("#bf0000").convertSRGBToLinear();
  materials['Material.004'].emissiveIntensity = 0;
  materials['Material.005'].color = new Color("#67e8ff").convertSRGBToLinear();
  materials['Material.005'].emissiveIntensity = 0;

  
  // useEffect(() => {
  //   actions.Plane1!.play();
  // })

  return (
    //@ts-ignore: Unreachable code error
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Sphere.geometry} material={materials['Material.001']} scale={1.4*_scale} />

      <Markup position={[-0.48*_scale, 1.09*_scale, 0.78*_scale]} rotation={[-2.33, 0.16, -0.4]} index={1} activeIndex={activeIndex} setActiveIndex={setActiveIndex}>
        Born in 2003 🐑. BC, Canada.
      </Markup>
      <Markup position={[0.31*_scale, 0.94*_scale, 1.03*_scale]} rotation={[-2.18, 0.07, 0.17]} index={2} activeIndex={activeIndex} setActiveIndex={setActiveIndex}>
        NYC and CT 🏠 2005.
      </Markup>
      <Markup position={[0.97*_scale, 1.05*_scale, -0.13*_scale]} rotation={[-1.84, -0.77, 1.44]} index={3} activeIndex={activeIndex} setActiveIndex={setActiveIndex}>
        Switzerland 🇨🇭 2010.
      </Markup>
      <Markup position={[1.13*_scale, 0.85*_scale, -0.2*_scale]} rotation={[-1.77, -0.52, 1.57]} index={4} activeIndex={activeIndex} setActiveIndex={setActiveIndex}>
        Tunisia 🇹🇳 2012.
      </Markup>
      <Markup position={[1.42*_scale, 0.13*_scale, 0.09*_scale]} rotation={[-1.75, -0.04, 1.61]} index={5} activeIndex={activeIndex} setActiveIndex={setActiveIndex}>
        Ivory Coast 🇨🇮 2014.
      </Markup>
      <Markup position={[1.04*_scale, 0.96*_scale, -0.24*_scale]} rotation={[-1.56, -0.71, 1.8]} index={6} activeIndex={activeIndex} setActiveIndex={setActiveIndex}>
        Italy 🇮🇹 2015.
      </Markup>
      <Markup position={[0.27*_scale, 1.01*_scale, 0.97*_scale]} rotation={[-2.4, 0.11, 0.2]} index={7} activeIndex={activeIndex} setActiveIndex={setActiveIndex}>
        Montreal, Canada 📍 2017.
      </Markup>

      <lineSegments name="NurbsPath" geometry={nodes.NurbsPath.geometry} material={nodes.NurbsPath.material} position={[-0.11*_scale, 1.03*_scale, 0.93*_scale]} scale={0.49*_scale} />
      <group name="Plane1" position={[-0.47*_scale, 1.06*_scale, 0.78*_scale]} rotation={[1.89, 0.48, -1.1]} scale={0.71*_scale}>
        <mesh name="Cube_2_2_Body_0" geometry={nodes.Cube_2_2_Body_0.geometry} material={materials.Body} />
        <mesh name="Cube_2_2_Body_0_1" geometry={nodes.Cube_2_2_Body_0_1.geometry} material={materials.material} />
        <mesh name="Cube_2_2_Body_0_2" geometry={nodes.Cube_2_2_Body_0_2.geometry} material={materials.Glass} />
      </group>

    </group>
  )
}

useGLTF.preload(model)


